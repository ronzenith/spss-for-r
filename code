##Simple Histogram of Total perceived stress by sex

library(ggplot2)
attach(survey)
ggplot(survey, aes(x = tpstress, fill = as.factor(sex))) +
  geom_histogram(position = "identity", alpha = 0.4)


df <- data.frame(
 age, sex, tpstress 
)

age_gp <- as.factor(age_groups(df$age,split_at = c(30, 45), na.rm = T))
sex <- as.factor(sex, na.rm = T)
df <- data.frame(
  age, sex, tpstress, age_gp
)
summary(tpstress, na.rm = T)
head(df)

sd <- sd(df$tpstress, na.rm = T)

ggplot(df, aes(x=age_gp, y=tpstress, fill=sex)) + 
  geom_bar(stat="identity", color="black", 
           position=position_dodge()) +
  geom_errorbar(aes(ymin=tpstress, ymax=tpstress+sd), width=.2,
                position=position_dodge(.9), na.rm = T) 

library(dplyr)

survey2 <- survey %>%
  mutate(
    across(c(Rop2 = op2, Rop4 = op4, Rop6 = op6), ~recode(.x, `1` = 5, `2` = 4, `4` = 2, `5` = 1)))
Totoptim <- op1 + op3 + op5 + Rop2 + Rop4 + Rop6
survey2 <- survey2 %>%
  mutate(Totoptim)

library(labelled)

var_label(survey2$Totoptim) <- "Total optimism level"

#Binning
#R: https://www.youtube.com/watch?v=Ik0R_H__LZ4

df <- data.frame(survey2$age)
colnames(df) <- c('age')

df$agegp3<- cut(df$age,
                      breaks = quantile(df$age,
                                        probs = seq(0, 1, 0.3333333333),
                                        ),
                
)
var_label(df$agegp3) <- "age in 3 groups"
summary(df$agegp3)


df$agegp3 <- ordered(df$agegp3,
                     levels = c("(18,29]","(29,44]", "(44,82]"),
                     labels = c("Low", "Medium", "HiHi"))
summary(df$agegp3)                        
survey2 <- survey2 %>% mutate(df$agegp3)                            
colnames(survey2)[ncol(survey2)] <- "agegp3"                       


survey3 <- survey2
survey3 <- survey3[, -136]
table(survey3$educ)

#collapse variable and mutate
survey3$educrec2 <- recode(survey3$educ, `2` = 1, `3` = 2, `4` = 3, `5` = 4, `6` = 5)
table(survey3$educrec2)
survey3$educrec2 <- ordered(survey3$educrec2,
                            levels = c("1", "2", "3", "4", "5"),
                            labels = c("did not complete high sch", "completed high sch", "some uni training", "completed ug uni", "completed pg uni"))

#dealing with date and time
birth_dates

birth_dates %>%
  mutate(posix_to_date = as.Date(dob_actual)) %>%
  select(dob_actual, posix_to_date)

birth_dates %>%
  mutate(dob_typical_to_date = as.Date(dob_typical)) %>%
  select(dob_typical, dob_typical_to_date)

birth_dates %>%
  mutate(dob_typical_to_date = as.Date(dob_typical, format = "%m/%d/%Y")) %>%
  select(dob_typical, dob_typical_to_date)

select(birth_dates, dob_long)

birth_dates %>%
  mutate(dob_long_to_date = as.Date(dob_long, format = "%B %d, %Y")) %>%
  select(dob_long, dob_long_to_date)

birth_dates %>%
  mutate(dob_abbreviated = format(dob_actual, "%d %b %y")) %>%
  select(dob_actual, dob_abbreviated)

##########################

#another exercise on date

library(dplyr)
library(ggplot2)

data("iris")

summary <- iris %>%
  group_by(Species) %>%
  summarise(
    mean_PL = mean(Petal.Length),
    sd_PL = sd(Petal.Length),
    n_PL = n(),
    SE_PL = sd_PL / sqrt(n_PL)
  )
summary
plot <- ggplot(summary, aes(Species, mean_PL)) +
  geom_col() +
  geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), width = 0.2)
plot

attach(survey)


df <-
  survey %>% mutate(Rop2 = recode(
    op2,
    "1" = 5,
    "2" = 4,
    "3" = 3,
    "4" = 2,
    "5" = 1
  ))

library(dplyr)

birth_dates %>%
  mutate(posix_to_date = as.Date(dob_actual)) %>%
  select(posix_to_date, dob_actual)

birth_dates %>%
  mutate(dob_typical_to_date = as.Date(dob_typical, format = "%m/%d/%Y")) %>%
  select(dob_typical_to_date, dob_typical)

df <- birth_dates %>%
  mutate(dob_long_to_date = as.Date(dob_long, format = "%B %d, %Y")) %>%
  select(dob_long, dob_long_to_date)

Sys.setlocale("LC_ALL", "English")

birth_dates %>%
  mutate(dob_abbre = format(dob_actual, "%d %b %y")) %>%
  select(dob_abbre, dob_actual)

dob_char <-
  data.frame(DATE = format(df$dob_long_to_date, "%Y%m%d"))
dob_char

birth_dates

Sys.Date()
lubridate::today()
lubridate::now()

seq.Date(
  from = as.Date("2020-01-01"),
  to = as.Date("2020-01-15"),
  by = "days"
)

seq.Date(from = as.Date("2022-11-01"),
         to = Sys.Date(),
         by = "days")

age <- birth_dates %>%
  select(name_first, dob = dob_default) %>%
  print()

age %>%
  mutate(today = Sys.Date())

age <- age %>%
  mutate(today = Sys.Date()) %>%
  print()

library(lubridate)

age %>%
  mutate(
    age_subtraction = today - dob,
    age_difftime = difftime(today, dob),
    age_lubridate = (dob %--% today)
  )

#to years
age %>%
  mutate(
    age_subtraction = as.numeric(today - dob) / 365.25,
    age_difftime = as.numeric(difftime(today, dob)) / 365.25,
    age_lubridate = (dob %--% today) / years(1) # tell us how many 1-year periods
  )

age %>%
  mutate(
    age_subtraction = as.numeric(today - dob) / 365.25,
    age_difftime = as.numeric(difftime(today, dob)) / 365.25,
    age_lubridate = (dob %--% today) / years(1)
  )

start <- as.Date("2017-03-01")
end <- as.Date("2018-03-01")
as.numeric(difftime(end, start)) / 365.25
(start %--% end) / years(1)

age %>%
  mutate(
    age_years = (dob %--% today) / years(1),
    age_last = trunc(age_years),
    age_near = round(age_years)
  )

age <- age %>%
  select(-today) %>%
  print()

age %>%
  mutate(
    day = day(dob),
    month = month(dob),
    year = year(dob),
    wday = wday(dob),
    day_full = wday(dob, label = T, abbr = F),
    day_abb = wday(dob, label = T, abbr = T),
    week_of_year = week(dob),
    #week that begins on Monday
    week_cdc = epiweek(dob) #week that begins on Sunday
  )

age %>%
  arrange(dob)

age %>%
  arrange(desc(dob))


library(ggpubr)
library(moments)

data("USJudgeRatings")
df <- USJudgeRatings
head(df)

ggdensity(df,x = "CONT", fill = "blue", title = "CONT") + scale_x_continuous(limits = c(3,12)) + stat_overlay_normal_density(color = "red")
ggdensity(df, x = "PHYS", fill = "green", title = "PHYS") + scale_x_continuous(limits = c(3, 12)) + stat_overlay_normal_density(color = "red")
skewness(df$CONT, na.rm = TRUE)
skewness(df$PHYS, na.rm = TRUE)

df$CONT <- log10(df$CONT)
df$PHYS <- log10((max(df$PHYS)+1) - df$PHYS)

ggdensity(df,x = "CONT", fill = "blue", title = "CONT") + stat_overlay_normal_density(color = "red")
ggdensity(df, x = "PHYS", fill = "green", title = "PHYS") + stat_overlay_normal_density(color = "red")
skewness(df$CONT, na.rm = TRUE)
skewness(df$PHYS, na.rm = TRUE)

install.packages("psych")
library(psych)
attach(survey)
lifsat <- na.omit(survey[,grep("lifsat", colnames(survey))])
lifsat
summary(lifsat)
describe(lifsat)
cor(lifsat)
alpha(lifsat)
inter_item <- lifsat %>% cor() %>% colMeans()
inter_item

########################

attach(survey)
plot(tpcoiss, tpstress)

cor.test(tpcoiss, tpstress, use = "pairwise.complete.obs")
cor.test(tpcoiss, tpstress, method = "spearman", use = "pairwise.complete.obs")
library(dplyr)
nrow(survey[!is.na(survey$tpstress),]) 
nrow(survey[!is.na(survey$tpcoiss),])

df <- survey[ ,c("tpcoiss", "tmast", "tposaff", "tnegaff","tlifesat")]
cor.test(df)
install.packages("Hmisc")
library(Hmisc)
library(ggplot2)
rcorr(as.matrix(df))
#https://statsandr.com/blog/correlation-coefficient-and-correlation-test-in-r/

######

df <- haven::read_sav("survey.sav")

library(tidyverse)

df %>% 
  group_by(sex) %>%
  summarise(cor = cor(toptim, tnegaff, use = "complete.obs"),
            cor.test = list(cor.test(toptim, tnegaff))) %>%
  mutate(tidy_out = map(cor.test, broom::tidy)) %>%
  unnest(tidy_out)

#tidyr
#https://www.youtube.com/watch?v=LjNBWsYgOjA
company <- c("google", 'apple')
year <- c(2010, 2020)
liability_to_asset <- c("10/100", "20/200")

acc1 <- data.frame(company, year, liability_to_asset)

library(tidyr)

acc2 <- separate(acc1, liability_to_asset, sep = "/", into = c("liability", "asset"))
acc3 <- unite(acc2, liability, asset, col = "proportion", sep = "/", remove = T, na.rm = F)

company_name <- c("google", "apple", "tsmc")
revenue2020 <- c(10, 25, 50)
revenue2021 <- c(60, 50, 100)
data.frame(company_name, revenue2020, revenue2021)
FinReport <- data.frame(company_name, revenue2020, revenue2021)

newReport <- pivot_longer(FinReport, col = 2:3, names_to = "year", values_to = "revenue")
newerReport <- pivot_wider(newReport, names_from = "year", values_from = "revenue") %>% t(.) %>% `colnames<-`(.[1,]) %>% .[-1, ]


name <- c("Amy", "Bob", "Amy", "Zeta", "Amy", "Bob", "Zeta")
year <- c(2001, 2003, 2005, 2010, 2021, 2019, 1988)
length <- c(175, 180, 155, 163, 195, 178, 162)
weight <- c(75, 45, 50, 63, 48, 79, 85)

plot1 <- data.frame(name, year, length, weight)

plot_1 <- plot1 %>% nest(data = c(year: weight))

library(dplyr)

plot_11 <- plot1 %>% group_by(name) %>% nest() 
plot_2 <- plot_1 %>% unnest(data)

###################partial correlation

library(tidyr)
library(dplyr)

df <- survey %>% drop_na(tpcoiss, tpstress, tmarlow) %>% select(tpcoiss, tpstress, tmarlow)

attach(df)

library(ppcor)
pcor.test(tpcoiss, tpstress, tmarlow)
cor.test(tpcoiss, tpstress)

##################

detach(df)

df <- survey %>% drop_na(tpcoiss, tpstress, tmast) %>% select(tpcoiss, tpstress, tmast)

attach(df)
lm1 <- lm(tpstress ~ tpcoiss + tmast, data = df)
summary(lm1)
car::vif(lm1)

library(ggplot2)
library(qqplotr)
ggplot(mapping = aes(sample = tpstress)) + stat_qq_point(size = 2) + stat_qq_line(color="green") #check deviations from normality

#Create a scatter Residual Plot
res <- resid(lm1)
plot(fitted(lm1),res)

#https://towardsdatascience.com/mahalonobis-distance-and-outlier-detection-in-r-cb9c37576d7d
